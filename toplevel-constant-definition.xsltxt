stylesheet 1.0;

output method=xml indent="yes";

include die.xsl;
include tokens.xsl;

tpl [*] {
  $element = `local-name ()`;
  <$element {
    for-each [@*] { copy-of `.`; }
    apply [*];
  }
}

// Substitute the definiens of a constant definition where the
// constant is used.

tpl [Text-Proper/Item[@kind = "Constant-Definition"]] {
  // do nothing
}

tpl [Simple-Term[@idnr = preceding::Item[@kind = "Constant-Definition" and parent::Text-Proper]/Variable/@idnr]] {
  $idnr = `@idnr`;
  $arguments = `*`;
  $toplevel-definition = `preceding::Item[@kind = "Constant-Definition" and parent::Text-Proper]/Variable[@idnr = $idnr][1]/..`;
  for-each [$toplevel-definition] {
    $definiens = `*[position() = last()]`;
    apply [$definiens];
  }
}

tpl [Variable[@idnr = preceding::Item[@kind = "Constant-Definition" and parent::Text-Proper]/Variable[@spelling]/@idnr]] {
  $idnr = `@idnr`;
  $arguments = `*`;
  $toplevel-definition = `preceding::Item[@kind = "Constant-Definition" and parent::Text-Proper]/Variable[@idnr = $idnr][1]/..`;
  for-each [$toplevel-definition] {
    $definiens = `*[position() = last()]`;
    apply [$definiens];
  }
}
