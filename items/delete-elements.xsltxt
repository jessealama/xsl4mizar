stylesheet 1.0;
output method=xml;

// Comma-delimited list of positive natural numbers representing
// indices of elements of the root element that are to be omitted.

#to-delete = { ""; }

tpl die(#message) {
  if [@line and @col] {
    $line = `@line`;
    $col = `@col`;
    $final_message = `concat ($message, " (line ", $line, ", column ", $col, ")")`;
    msg terminate="yes" $final_message;
  } else {
    $final_message = `concat ($message, " (unable to determine line and column information)")`;
    msg terminate="yes" $final_message;
  }
}

tpl [/] {
  copy {
    for-each [@*] { copy-of `.`; }
    apply [*];
  }
}

tpl [/*] {
  copy {
    for-each [@*] { copy-of `.`; }
    enumerate-elements (#elements = `*`,
                        #index = "1");
  }
}

tpl enumerate-elements (#elements, #index) {
  if [$elements] {
    $element = `$elements[1]`;
    $token = `concat (",", $index, ",")`;
    if [not(contains ($to-delete, $token))] {
      copy-of `$element`;
    }
    "\n";
    enumerate-elements (#elements = `$elements[position () > 1]`,
                        #index = `$index + 1`);
  }
}